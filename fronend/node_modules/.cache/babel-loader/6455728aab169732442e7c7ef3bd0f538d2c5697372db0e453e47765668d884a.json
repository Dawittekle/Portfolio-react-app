{"ast":null,"code":"import postsData from \"../posts.json\";\nlet cachedPosts = null;\n\n// Helper function to safely parse dates\nconst safeDateSort = (a, b) => {\n  try {\n    return new Date(b.date) - new Date(a.date);\n  } catch (e) {\n    return 0; // Fallback if date parsing fails\n  }\n};\nexport function getAllPosts() {\n  if (!cachedPosts) {\n    try {\n      // Create a new array to avoid modifying the original\n      cachedPosts = Object.values(postsData).map(post => ({\n        ...post\n      }));\n      cachedPosts.sort(safeDateSort); // Sort by date\n    } catch (error) {\n      console.error(\"Error loading posts:\", error);\n      cachedPosts = [];\n    }\n  }\n  return cachedPosts;\n}\nexport function getPostById(id) {\n  try {\n    const post = postsData[id];\n    return post ? {\n      ...post\n    } : null; // Return a copy\n  } catch (error) {\n    console.error(`Error loading post ${id}:`, error);\n    return null;\n  }\n}\nexport function getLatestPosts(count = 3) {\n  try {\n    const allPosts = getAllPosts(); // Uses cached and sorted posts\n    return allPosts.slice(0, count);\n  } catch (error) {\n    console.error(\"Error getting latest posts:\", error);\n    return [];\n  }\n}\n\n// Development hot reload\nif (process.env.NODE_ENV === \"development\") {\n  if (module.hot) {\n    module.hot.accept(\"../posts.json\", () => {\n      cachedPosts = null; // Reset cache\n      console.log(\"ðŸ”¥ Posts updated - cache cleared\");\n    });\n  }\n}","map":{"version":3,"names":["postsData","cachedPosts","safeDateSort","a","b","Date","date","e","getAllPosts","Object","values","map","post","sort","error","console","getPostById","id","getLatestPosts","count","allPosts","slice","process","env","NODE_ENV","module","hot","accept","log"],"sources":["C:/Users/Admin/Documents/GitHub/New folder 2/Portfolio-react-app/fronend/src/lib/loadPosts.js"],"sourcesContent":["import postsData from \"../posts.json\";\r\n\r\nlet cachedPosts = null;\r\n\r\n// Helper function to safely parse dates\r\nconst safeDateSort = (a, b) => {\r\n  try {\r\n    return new Date(b.date) - new Date(a.date);\r\n  } catch (e) {\r\n    return 0; // Fallback if date parsing fails\r\n  }\r\n};\r\n\r\nexport function getAllPosts() {\r\n  if (!cachedPosts) {\r\n    try {\r\n      // Create a new array to avoid modifying the original\r\n      cachedPosts = Object.values(postsData).map((post) => ({ ...post }));\r\n      cachedPosts.sort(safeDateSort); // Sort by date\r\n    } catch (error) {\r\n      console.error(\"Error loading posts:\", error);\r\n      cachedPosts = [];\r\n    }\r\n  }\r\n  return cachedPosts;\r\n}\r\n\r\nexport function getPostById(id) {\r\n  try {\r\n    const post = postsData[id];\r\n    return post ? { ...post } : null; // Return a copy\r\n  } catch (error) {\r\n    console.error(`Error loading post ${id}:`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getLatestPosts(count = 3) {\r\n  try {\r\n    const allPosts = getAllPosts(); // Uses cached and sorted posts\r\n    return allPosts.slice(0, count);\r\n  } catch (error) {\r\n    console.error(\"Error getting latest posts:\", error);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Development hot reload\r\nif (process.env.NODE_ENV === \"development\") {\r\n  if (module.hot) {\r\n    module.hot.accept(\"../posts.json\", () => {\r\n      cachedPosts = null; // Reset cache\r\n      console.log(\"ðŸ”¥ Posts updated - cache cleared\");\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,eAAe;AAErC,IAAIC,WAAW,GAAG,IAAI;;AAEtB;AACA,MAAMC,YAAY,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC7B,IAAI;IACF,OAAO,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC;EAC5C,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,OAAO,CAAC,CAAC,CAAC;EACZ;AACF,CAAC;AAED,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,IAAI,CAACP,WAAW,EAAE;IAChB,IAAI;MACF;MACAA,WAAW,GAAGQ,MAAM,CAACC,MAAM,CAACV,SAAS,CAAC,CAACW,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA;MAAK,CAAC,CAAC,CAAC;MACnEX,WAAW,CAACY,IAAI,CAACX,YAAY,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5Cb,WAAW,GAAG,EAAE;IAClB;EACF;EACA,OAAOA,WAAW;AACpB;AAEA,OAAO,SAASe,WAAWA,CAACC,EAAE,EAAE;EAC9B,IAAI;IACF,MAAML,IAAI,GAAGZ,SAAS,CAACiB,EAAE,CAAC;IAC1B,OAAOL,IAAI,GAAG;MAAE,GAAGA;IAAK,CAAC,GAAG,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsBG,EAAE,GAAG,EAAEH,KAAK,CAAC;IACjD,OAAO,IAAI;EACb;AACF;AAEA,OAAO,SAASI,cAAcA,CAACC,KAAK,GAAG,CAAC,EAAE;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC,CAAC,CAAC;IAChC,OAAOY,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAEF,KAAK,CAAC;EACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,EAAE;EACX;AACF;;AAEA;AACA,IAAIQ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EAC1C,IAAIC,MAAM,CAACC,GAAG,EAAE;IACdD,MAAM,CAACC,GAAG,CAACC,MAAM,CAAC,eAAe,EAAE,MAAM;MACvC1B,WAAW,GAAG,IAAI,CAAC,CAAC;MACpBc,OAAO,CAACa,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}